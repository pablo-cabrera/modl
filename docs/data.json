{
    "project": {
        "name": "modl",
        "description": "",
        "version": "0.0.1",
        "url": ""
    },
    "files": {
        "lib/modl.js": {
            "name": "lib/modl.js",
            "modules": {},
            "classes": {
                "modl.Ready": 1,
                "modl.Asset": 1,
                "modl.Module": 1,
                "modl.Loader": 1
            },
            "fors": {
                "modl": 1,
                "modl.Ready": 1,
                "modl.Asset": 1,
                "modl.Module": 1,
                "modl.Loader": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "modl": {
            "name": "modl",
            "shortname": "modl",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": []
        },
        "modl.Ready": {
            "name": "modl.Ready",
            "shortname": "modl.Ready",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/modl.js",
            "line": 149,
            "description": "The Ready class provides the functionality of scheduling callbacks\nfor when a given Ready instance is marked as ready",
            "is_constructor": 1,
            "access": "private",
            "tagname": ""
        },
        "modl.Asset": {
            "name": "modl.Asset",
            "shortname": "modl.Asset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/modl.js",
            "line": 297,
            "description": "The Asset class represents an script file being loaded within a\nmodule.",
            "extends": "modl.Ready",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "name",
                    "description": "It's name",
                    "type": "String"
                }
            ]
        },
        "modl.Module": {
            "name": "modl.Module",
            "shortname": "modl.Module",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/modl.js",
            "line": 418,
            "description": "The Module class represents a module within the module tree. It can\nload other <b>modules</b>(dependencies contained within\n<code>node_modules</code> directory) and <b>assets</b> (files\nreferenced within a module).",
            "extends": "modl.Ready",
            "is_constructor": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "name",
                    "description": "The module's name",
                    "type": "String"
                },
                {
                    "name": "path",
                    "description": "The module's path",
                    "type": "String"
                },
                {
                    "name": "parent",
                    "description": "The parent module for this one",
                    "type": "modl.Module"
                },
                {
                    "name": "hydrating",
                    "description": "Indicates that this module is being hydrated\n             and should not be initialized automatically",
                    "type": "Boolean"
                }
            ]
        },
        "modl.Loader": {
            "name": "modl.Loader",
            "shortname": "modl.Loader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/modl.js",
            "line": 707,
            "description": "The loader class responsible for loading the various dependencies between\n modules and assets.",
            "extends": "modl.Ready",
            "is_constructor": 1,
            "access": "private",
            "tagname": ""
        }
    },
    "classitems": [
        {
            "file": "lib/modl.js",
            "line": 28,
            "description": "The defaults asset for a module",
            "itemtype": "property",
            "name": "MODULE_ASSET",
            "type": "string",
            "static": 1,
            "access": "private",
            "tagname": "",
            "final": 1,
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 40,
            "description": "The regex to get the alias from the resource name",
            "itemtype": "property",
            "name": "ALIAS_RE",
            "type": "RegEx",
            "static": 1,
            "access": "private",
            "tagname": "",
            "final": 1,
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 52,
            "description": "The regex used to remove double (or more) slashes from a path",
            "itemtype": "property",
            "name": "PATH_RE",
            "type": "RegEx",
            "static": 1,
            "access": "private",
            "tagname": "",
            "final": 1,
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 64,
            "description": "A reference to the undefined value used internally",
            "itemtype": "property",
            "name": "undef",
            "type": "undefined",
            "static": 1,
            "access": "private",
            "tagname": "",
            "final": 1,
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 78,
            "description": "Array containing all",
            "itemtype": "property",
            "name": "node",
            "type": "boolean",
            "static": 1,
            "access": "private",
            "tagname": "",
            "final": 1,
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 90,
            "description": "Contains current settings for the modl loader",
            "itemtype": "property",
            "name": "settings",
            "type": "Object",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 103,
            "description": "Points to the current module being loaded",
            "itemtype": "property",
            "name": "currentModule",
            "type": "modl.Module",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 114,
            "description": "Points to the root module",
            "itemtype": "property",
            "name": "rootModule",
            "type": "modl.Module",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 125,
            "description": "Points to the asset being loaded at the moment",
            "itemtype": "property",
            "name": "loadingAsset",
            "type": "Asset",
            "static": 1,
            "access": "private",
            "tagname": "",
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 136,
            "description": "The module reference put within the hydrated modules during module\npreloading",
            "itemtype": "property",
            "name": "MODULE_REFERENCE",
            "type": "modl.Module",
            "static": 1,
            "access": "private",
            "tagname": "",
            "final": 1,
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 166,
            "description": "Indicates whether the instance is ready or not",
            "itemtype": "property",
            "name": "readyStatus",
            "access": "private",
            "tagname": "",
            "type": "{boolean}",
            "class": "modl.Ready"
        },
        {
            "file": "lib/modl.js",
            "line": 176,
            "description": "Ready callback functions are stored within this guy",
            "itemtype": "property",
            "name": "readyCallbacks",
            "access": "private",
            "tagname": "",
            "type": "{array}",
            "class": "modl.Ready"
        },
        {
            "file": "lib/modl.js",
            "line": 186,
            "description": "Indicates whether the instance has failed or not",
            "itemtype": "property",
            "name": "failStatus",
            "access": "private",
            "tagname": "",
            "type": "{boolean}",
            "class": "modl.Ready"
        },
        {
            "file": "lib/modl.js",
            "line": 196,
            "description": "Fail callback functions are stored within this guy",
            "itemtype": "property",
            "name": "failCallbacks",
            "access": "private",
            "tagname": "",
            "type": "{array}",
            "class": "modl.Ready"
        },
        {
            "file": "lib/modl.js",
            "line": 206,
            "description": "Holds the failure reason",
            "itemtype": "property",
            "name": "failure",
            "access": "private",
            "tagname": "",
            "type": "{mixed}",
            "class": "modl.Ready"
        },
        {
            "file": "lib/modl.js",
            "line": 219,
            "description": "Schedules an <b>f</b> callback to be executed once the\ninstance is marked as <b>ready</b>",
            "itemtype": "method",
            "name": "whenReady",
            "params": [
                {
                    "name": "f",
                    "description": "The callback function to be scheduled",
                    "type": "Function"
                }
            ],
            "class": "modl.Ready"
        },
        {
            "file": "lib/modl.js",
            "line": 237,
            "description": "Schedules an <b>f</b> callback to be executed once the\ninstance is marked as <b>failed</b>",
            "itemtype": "method",
            "name": "whenFail",
            "params": [
                {
                    "name": "f",
                    "description": "The callback function to be scheduled",
                    "type": "Function"
                }
            ],
            "class": "modl.Ready"
        },
        {
            "file": "lib/modl.js",
            "line": 255,
            "description": "Marks the instance as <b>ready</b> and runs all it's callbacks",
            "itemtype": "method",
            "name": "ready",
            "class": "modl.Ready"
        },
        {
            "file": "lib/modl.js",
            "line": 270,
            "description": "Marks the instance as <b>ready</b> and runs all it's callbacks",
            "itemtype": "method",
            "name": "fail",
            "params": [
                {
                    "name": "reason",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "class": "modl.Ready"
        },
        {
            "file": "lib/modl.js",
            "line": 310,
            "description": "The asset's name",
            "itemtype": "property",
            "name": "myName",
            "type": "{string}",
            "access": "private",
            "tagname": "",
            "class": "modl.Asset"
        },
        {
            "file": "lib/modl.js",
            "line": 320,
            "description": "Holds the asset's exports",
            "itemtype": "property",
            "name": "exports",
            "type": "{mixed}",
            "class": "modl.Asset"
        },
        {
            "file": "lib/modl.js",
            "line": 332,
            "description": "Retrieves the asset and loads it",
            "params": [
                {
                    "name": "path",
                    "description": "It's path",
                    "type": "String"
                }
            ],
            "class": "modl.Asset"
        },
        {
            "file": "lib/modl.js",
            "line": 357,
            "description": "Loads a given script.",
            "itemtype": "method",
            "name": "loadScript",
            "static": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "src",
                    "description": "The script's src",
                    "type": "String"
                },
                {
                    "name": "success",
                    "description": "The success callback",
                    "type": "Function"
                },
                {
                    "name": "fail",
                    "description": "The fail callback",
                    "type": "Function"
                }
            ],
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 383,
            "description": "Tracks the loading of a script element. When the script is loaded\nand run, first the \"success\" callback",
            "params": [
                {
                    "name": "node",
                    "description": "the \"script\" node",
                    "type": "HTMLScriptElement"
                },
                {
                    "name": "success",
                    "description": "The success callback",
                    "type": "Function"
                },
                {
                    "name": "fail",
                    "description": "The fail callback",
                    "type": "Function"
                }
            ],
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 449,
            "description": "It's name",
            "itemtype": "property",
            "name": "myName",
            "access": "private",
            "tagname": "",
            "type": "{string}",
            "class": "modl.Module"
        },
        {
            "file": "lib/modl.js",
            "line": 459,
            "description": "It's path",
            "itemtype": "property",
            "name": "myPath",
            "access": "private",
            "tagname": "",
            "type": "{string}",
            "class": "modl.Module"
        },
        {
            "file": "lib/modl.js",
            "line": 469,
            "description": "It's parent module",
            "itemtype": "property",
            "name": "myParent",
            "access": "private",
            "tagname": "",
            "type": "{Module}",
            "class": "modl.Module"
        },
        {
            "file": "lib/modl.js",
            "line": 479,
            "description": "It's inner modules. This will contain the references for\nthe children modules currently loaded for this module.",
            "itemtype": "property",
            "name": "modules",
            "access": "private",
            "tagname": "",
            "type": "{object}",
            "class": "modl.Module"
        },
        {
            "file": "lib/modl.js",
            "line": 490,
            "description": "It's assets. This will contain the references for all\nassets currently loaded within this module.",
            "itemtype": "property",
            "name": "assets",
            "access": "private",
            "tagname": "",
            "type": "{object}",
            "class": "modl.Module"
        },
        {
            "file": "lib/modl.js",
            "line": 501,
            "description": "Holds the module's exports",
            "itemtype": "property",
            "name": "exports",
            "type": "{mixed}",
            "class": "modl.Module"
        },
        {
            "file": "lib/modl.js",
            "line": 578,
            "description": "Initializes the module loading its <code>/module</code> asset",
            "itemtype": "method",
            "name": "initialize",
            "class": "modl.Module"
        },
        {
            "file": "lib/modl.js",
            "line": 601,
            "description": "Loads an asset within the module.",
            "itemtype": "method",
            "name": "asset",
            "params": [
                {
                    "name": "name",
                    "description": "The asset's name",
                    "type": "String"
                },
                {
                    "name": "success",
                    "description": "The success callback",
                    "type": "Function"
                },
                {
                    "name": "fail",
                    "description": "The fail callback",
                    "type": "Function"
                }
            ],
            "class": "modl.Module"
        },
        {
            "file": "lib/modl.js",
            "line": 626,
            "description": "Loads child module within the module <i>(Yo dawg! I heard you\nlike modules...)</i>.",
            "itemtype": "method",
            "name": "module",
            "params": [
                {
                    "name": "name",
                    "description": "The module's name",
                    "type": "String"
                },
                {
                    "name": "success",
                    "description": "The success callback",
                    "type": "Function"
                },
                {
                    "name": "fail",
                    "description": "The fail callback",
                    "type": "Function"
                }
            ],
            "class": "modl.Module"
        },
        {
            "file": "lib/modl.js",
            "line": 730,
            "description": "The uses collection containing the various uses data",
            "itemtype": "property",
            "name": "uses",
            "access": "private",
            "tagname": "",
            "type": "{object}",
            "class": "modl.Loader"
        },
        {
            "file": "lib/modl.js",
            "line": 740,
            "description": "The uses order containing the order of uses declaration",
            "itemtype": "property",
            "name": "usesOrder",
            "access": "private",
            "tagname": "",
            "type": "{array}",
            "class": "modl.Loader"
        },
        {
            "file": "lib/modl.js",
            "line": 750,
            "description": "The module instance to be passed along to the exports\ncallback function when called",
            "itemtype": "property",
            "name": "module",
            "access": "private",
            "tagname": "",
            "type": "{object}",
            "class": "modl.Loader"
        },
        {
            "file": "lib/modl.js",
            "line": 764,
            "description": "The callback function to be executed when all the\nrequires are ready",
            "itemtype": "property",
            "name": "myPayload",
            "access": "private",
            "tagname": "",
            "type": "{function}",
            "class": "modl.Loader"
        },
        {
            "file": "lib/modl.js",
            "line": 778,
            "description": "Attach a given asset to this Loader. When the loader is\nready, the asset will also be market as ready",
            "itemtype": "method",
            "name": "attachAsset",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "asset",
                    "description": "The asset to be attached",
                    "type": "Asset"
                }
            ],
            "class": "modl.Loader"
        },
        {
            "file": "lib/modl.js",
            "line": 797,
            "description": "Dispatches the loader processing. It will start loading all\nits requires and finally will run the payload function.",
            "itemtype": "method",
            "name": "dispatch",
            "access": "private",
            "tagname": "",
            "class": "modl.Loader"
        },
        {
            "file": "lib/modl.js",
            "line": 843,
            "description": "Loads all requires for the loader.",
            "itemtype": "method",
            "name": "loadUses",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "success",
                    "description": "The success callback",
                    "type": "Function"
                },
                {
                    "name": "fail",
                    "description": "The fail callback",
                    "type": "Function"
                }
            ],
            "class": "modl.Loader"
        },
        {
            "file": "lib/modl.js",
            "line": 868,
            "description": "Loads a given require",
            "itemtype": "method",
            "name": "loadUse",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "name",
                    "description": "The use's name",
                    "type": "String"
                },
                {
                    "name": "success",
                    "description": "The success callback",
                    "type": "Function"
                },
                {
                    "name": "fail",
                    "description": "The fail callback",
                    "type": "Function"
                }
            ],
            "class": "modl.Loader"
        },
        {
            "file": "lib/modl.js",
            "line": 895,
            "description": "Requires an asset from it. The\n<b>resource</b> string may have the following formats:\n\n - <code>\"/path/to/asset</code>: in this case the asset within\nthe current module will be loaded\n\n - <code>\"module\"</code>: in this case the \"module\" within\n<code>node_modules</code> folder will be required, and\nafterwards the <code>/module</code> asset within the module will\nbe loaded.\n\nOptionally an <b>alias</b> property may be passed to name the\nrequired asset within the <b>imports</b> object. If\nommited, the alias will be automatically generated based the\n<b>resource</b> value.",
            "itemtype": "method",
            "name": "uses",
            "static": 1,
            "chainable": 1,
            "params": [
                {
                    "name": "resource",
                    "description": "A given resource to be required",
                    "type": "String"
                },
                {
                    "name": "alias",
                    "description": "An optional alias which to be named\n           within the <b>imports</b> object.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The loader instance",
                "type": "modl.Loader"
            },
            "class": "modl.Loader"
        },
        {
            "file": "lib/modl.js",
            "line": 929,
            "description": "Schedules a given <b>payload</b>\nfunction export the <i>asset</i>. The <b>payload</b> will only\nrun when all the requires are loaded and ready for prime time.\n\nWhen called, the <b>payload</b> function will receive the\n<b>module</b> struct as its first argument. The imports will be\npassed as subsequent arguments in order.\n\nThe <b>module</b> object will have an <code>exports</code>\nproperty which will be published for this asset. This property\ncan be overwritten with any value this asset may want to publish\n(<i>a la</i> nodejs module system).\n\nThe <b>module</b> object will also have an <code>imports</code>\nobject containing all required resources.\n\nEvery imports will be passed along as parameters to the payload\nfunction",
            "itemtype": "method",
            "name": "unit",
            "static": 1,
            "params": [
                {
                    "name": "payload",
                    "description": "The payload function",
                    "type": "Function"
                }
            ],
            "class": "modl.Loader"
        },
        {
            "file": "lib/modl.js",
            "line": 971,
            "description": "Simply creates <b>Loader</b> and returns it.\n\nGood for instrumenting purposes, in case you need a reference\nwithout calling {{#crossLink \"modl/uses:method\"}}{{/crossLink}}\nor {{#crossLink \"modl/unit:method\"}}{{/crossLink}} methods",
            "itemtype": "method",
            "name": "loader",
            "static": 1,
            "return": {
                "description": "",
                "type": "modl.Loader"
            },
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 988,
            "description": "Creates a <b>Loader</b> and requires an asset from it. The\n<b>resource</b> string may have the following formats:\n\n - <code>\"/path/to/asset</code>: in this case the asset within\nthe current module will be loaded\n\n - <code>\"module\"</code>: in this case the \"module\" within\n<code>node_modules</code> folder will be required, and\nafterwards the <code>/module</code> asset within the module will\nbe loaded.\n\nOptionally an <b>alias</b> property may be passed to name the\nrequired asset within the <b>imports</b> object. If\nommited, the alias will be automatically generated based the\n<b>resource</b> value.",
            "itemtype": "method",
            "name": "uses",
            "static": 1,
            "chainable": 1,
            "params": [
                {
                    "name": "resource",
                    "description": "A given resource to be required",
                    "type": "String"
                },
                {
                    "name": "alias",
                    "description": "An optional alias which to be named within\n           the <b>imports</b> object.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The loader instance",
                "type": "modl.Loader"
            },
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 1020,
            "description": "Creates a <b>Loader</b> and schedules a given <b>payload</b>\nfunction export the <i>asset</i>. The <b>payload</b> will only\nrun when all the requires are loaded and ready for prime time.\n\nWhen called, the <b>payload</b> function will receive the\n<b>module</b> struct as its first argument. The imports will be\npassed as subsequent arguments in order.\n\nThe <b>module</b> object will have an <code>exports</code>\nproperty which will be published for this asset. This property\ncan be overwritten with any value this asset may want to publish\n(<i>a la</i> nodejs module system).\n\nThe <b>module</b> object will also have an <code>imports</code>\nobject containing all required resources.\n\nEvery imports will be passed along as parameters to the payload\nfunction",
            "itemtype": "method",
            "name": "unit",
            "static": 1,
            "params": [
                {
                    "name": "payload",
                    "description": "The payload function",
                    "type": "Function"
                }
            ],
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 1050,
            "description": "Sets up the modl module environment. It will reset all loaded\nmodules and will set up the settings object along with the values\npassed along with the <b>options</b> parameter.\n\nThis function <b>MUST</b> be called before any require/exports\ncan be actually made.",
            "itemtype": "method",
            "name": "setup",
            "static": 1,
            "params": [
                {
                    "name": "options",
                    "description": "The options parameter",
                    "type": "Object",
                    "props": [
                        {
                            "name": "root",
                            "description": "The root directory form which to\n           load all assets and modules",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "modl"
        },
        {
            "file": "lib/modl.js",
            "line": 1076,
            "description": "Dispatches the loading of a concatenated module. This method\nshould be called only by machine generated code.",
            "itemtype": "method",
            "name": "$module",
            "static": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "module",
                    "description": "The concantenated module",
                    "type": "Object"
                }
            ],
            "class": "modl"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nRetrieves the asset and loads it",
            "line": " lib/modl.js:332"
        },
        {
            "message": "Missing item type\nTracks the loading of a script element. When the script is loaded\nand run, first the \"success\" callback",
            "line": " lib/modl.js:383"
        }
    ]
}